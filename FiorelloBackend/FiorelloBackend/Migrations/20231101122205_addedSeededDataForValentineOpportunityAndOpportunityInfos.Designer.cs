// <auto-generated />
using System;
using FiorelloBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiorelloBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231101122205_addedSeededDataForValentineOpportunityAndOpportunityInfos")]
    partial class addedSeededDataForValentineOpportunityAndOpportunityInfos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FiorelloBackend.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "1Class aptent taciti sociosqu ad litora torquent per conubia nostra, per",
                            Image = "blog-feature-img-1.jpg",
                            SoftDeleted = false,
                            Title = "Flower Power"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2Class aptent taciti sociosqu ad litora torquent per conubia nostra, per",
                            Image = "blog-feature-img-4.jpg",
                            SoftDeleted = false,
                            Title = "Local Florists"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3Class aptent taciti sociosqu ad litora torquent per conubia nostra, per",
                            Image = "blog-feature-img-3.jpg",
                            SoftDeleted = false,
                            Title = "Flower Beauty"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4Class aptent taciti sociosqu ad litora torquent per conubia nostra, per",
                            Image = "blog-feature-img-1.jpg",
                            SoftDeleted = true,
                            Title = "New Data"
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FiorelloBackend.Models.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Experts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "CRYSTAL BROOKS",
                            Image = "h3-team-img-1.png",
                            Position = "Florist",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Author = "SHIRLEY HARRIS",
                            Image = "h3-team-img-2.png",
                            Position = "Manager",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Author = "AMANDA WATKINS",
                            Image = "h3-team-img-4.png",
                            Position = "Florist",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Author = "BEVERLY CLARK",
                            Image = "h3-team-img-3.png",
                            Position = "Florist",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Instagram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Instagrams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "instagram1.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Image = "instagram2.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Image = "instagram3.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Image = "instagram4.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Image = "instagram5.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Image = "instagram6.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Image = "instagram7.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Image = "instagram8.jpg",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FiorelloBackend.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("FiorelloBackend.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Img = "h3-slider-background.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Img = "h3-slider-background-2.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Img = "h3-slider-background-3.jpg",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.SliderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SliderInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Where flowers are our inspiration to create lasting memories. Whatever the occasion, our flowers will make it special cursus a sit amet mauris.",
                            SignImg = "h2-sign-img.png",
                            SoftDeleted = false,
                            Title = "<h1>Send <span>flowers </span>  like</h1> <h1>you mean it</h1>"
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "h3-background-img.jpg",
                            SoftDeleted = false,
                            Title = "Join The Colorful Bunch!"
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus lingua.",
                            Author = "Anna Barnes",
                            Image = "testimonial-img-1.png",
                            Position = "Florist",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            About = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget.",
                            Author = "Jasmine White",
                            Image = "testimonial-img-2.png",
                            Position = "Florist",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.ValentineOpportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ValentineOpportunities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Where flowers are our inspiration to create lasting memories. Whatever the occasion...",
                            SoftDeleted = false,
                            Title = "<h1>Suprise Your <span>Valentine!</span> Let us arrange a smile.</h1>",
                            VideoIcon = "fas fa-play fa-lg",
                            VideoImage = "h3-video-img.jpg"
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.ValentineOpportunityInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ValentineOpportunityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValentineOpportunityId");

                    b.ToTable("ValentineOpportunityInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "h1-custom-icon.png",
                            Name = "Hand picked just for you.",
                            SoftDeleted = false,
                            ValentineOpportunityId = 2
                        },
                        new
                        {
                            Id = 2,
                            Icon = "h1-custom-icon.png",
                            Name = "Unique flower arrangements",
                            SoftDeleted = false,
                            ValentineOpportunityId = 2
                        },
                        new
                        {
                            Id = 3,
                            Icon = "h1-custom-icon.png",
                            Name = "Best way to say you care.",
                            SoftDeleted = false,
                            ValentineOpportunityId = 2
                        });
                });

            modelBuilder.Entity("FiorelloBackend.Models.Product", b =>
                {
                    b.HasOne("FiorelloBackend.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FiorelloBackend.Models.ProductImage", b =>
                {
                    b.HasOne("FiorelloBackend.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FiorelloBackend.Models.ValentineOpportunityInfo", b =>
                {
                    b.HasOne("FiorelloBackend.Models.ValentineOpportunity", "ValentineOpportunity")
                        .WithMany("OpportunityInfos")
                        .HasForeignKey("ValentineOpportunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ValentineOpportunity");
                });

            modelBuilder.Entity("FiorelloBackend.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FiorelloBackend.Models.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("FiorelloBackend.Models.ValentineOpportunity", b =>
                {
                    b.Navigation("OpportunityInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
